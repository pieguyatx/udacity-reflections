When would you want to use a remote repository rather than keeping all your work local?

  This is useful when you are working on a project from multiple computers, or when multiple people are working on the same project.  It also could be useful if you just want a backup for your projects online, or if you want to publicize or open-source a project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

  You might have made changes locally that haven't been committed to a branch yet, and pulling changes from a remote might conflict with that.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?

  Forks duplicate someone's repository on GitHub into an account on GitHub.  You would do this when you want to modify someone's project, but don't want to (or don't have permission to) change the original files, and still want to keep the project public while showing attribution to its origins.  Clones duplicate a repository onto a local location.  You would do this when you want to modify a project and work on it without necessarily making your work public.  Branches denote a chain of commits in a repository, and they are part of forked or cloned repositories. You might create branches when you, as an individual author, want to test different project features.

What is the benefit of having a copy of the last known state of the remote stored locally?

  When the last known state of the remote is stored locally in "origin/master", you can always compare your updates in your local branch to this, and maybe go back to it as needed.  Also, sometimes the remote can change if others are modifying it, or if you modify it from GitHub or another computer, and so your local copy is a kind of backup.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

  Without git or GitHub, I would share files using either email, Google Docs, Dropbox, or some other similar service.  I would have to specify which documents we're talking about all the time, and which version, and so multiple copies of the same file might be needed. This is a little easier with git/GitHub only because it hides these updates and only shows the version that you've got checked out.  Using git/GitHub is a little less intuitive off the bat, and you all have to learn the proper methods and terminology for using the tools.  The worflow of testing a new feature by committing to a new branch, pushing the branch, making a pull request, analyzing the pull request responses, and re-coding, all can be confusing.
